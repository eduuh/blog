<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Productivity on eduuh</title>
    <link>https://eduuh.codes/categories/productivity/</link>
    <description>Recent content in Productivity on eduuh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</managingEditor>
    <webMaster>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 09 Jul 2020 15:46:26 +0000</lastBuildDate>
    
        <atom:link href="https://eduuh.codes/categories/productivity/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Refactoring Dotfiles For Colemak</title>
        <link>https://eduuh.codes/posts/refactoringtocolemak/</link>
        <pubDate>Thu, 09 Jul 2020 15:46:26 +0000</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/posts/refactoringtocolemak/</guid>
        <description>Background I will write how a made a switch to colemak. However, until recently, I was still trying to mimic the vim keybindings from qwerty to a colemak equivalent. This is a post where i discuss the changes I made to ensure that I never have to strech my fingers in odd ways again. The main idea is expressed well by vim-colemak.
Most of my configuration is based on bunnyfly. A colemak user, who have inspired my Journey.</description>
        
        <dc:creator>eduuh</dc:creator>
        
        
        
        
          
            
              <category>colemak</category>
            
          
            
              <category>cli</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
            
              <category>linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>Ranger - Visual file manager</title>
        <link>https://eduuh.codes/posts/ranger/</link>
        <pubDate>Wed, 27 May 2020 15:03:52 +0000</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/posts/ranger/</guid>
        <description>Ranger Ranger is a console / terminal visual file manager written in Python and with VI key bindings. Ranger is a file manager with a different graphical interface.
Ranger use the Miller colums visual modes support up to nine tabs and most of the key bindings are the same off vi/ vim text editor.
Objective. Install and configure the Ranger file manager.
 Installation.  To install ranger is pretty simple using your package manager.</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codesimages/ranger.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ranger</category>
            
          
            
              <category>cli</category>
            
          
        
        
          
            
              <category>productivity</category>
            
          
            
              <category>linux</category>
            
          
        
        
          
            
              <category>DwmWorkflow</category>
            
          
        
      </item>
      
      <item>
        <title>FZF (Fuzzy Finder)</title>
        <link>https://eduuh.codes/posts/fzfinstallationusage/</link>
        <pubDate>Sun, 19 Apr 2020 07:41:06 -0700</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/posts/fzfinstallationusage/</guid>
        <description>Installations.  Two step install.  We can use git to install fzf: git clone &amp;ndash;depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install The above command will install fzf under ~/.fzf/bin. If you want to enable fzf inside Neovim, add the following setting to Neovim configuration (suppose your plugins manager is vim-plug ).
Plug &amp;lsquo;~/.fzf&amp;rsquo; One step install We can install fzf and enable it inside Neovim in one step. Use the following configuration for Neovim:</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codesimages/fzf.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Fuzzyfinder</category>
            
          
            
              <category>Cli</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
            
              <category>Nvimplugin</category>
            
          
        
        
          
            
              <category>Nvim</category>
            
          
        
      </item>
      
      <item>
        <title>My Keyboard Remaps(Smart CapsLock)</title>
        <link>https://eduuh.codes/posts/remaps/</link>
        <pubDate>Thu, 19 Mar 2020 07:41:06 -0700</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/posts/remaps/</guid>
        <description>My Remaps (General Remaping). My mindset is changing towards what works for me which bring the need to remap the defaults. Over the last few month I have shifted from Qwerty keyboard to colemak keyboard layout. I also made a shift from Windows machine to a Linux box a decision which I have not regretted ever.
I had written this post before my Major Os shift and my requirement have changed considerably.</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codesimages/configurations.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Cli</category>
            
          
            
              <category>Colemak</category>
            
          
            
              <category>Touchtyping</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
        
        
          
            
              <category>Dwmworkflow</category>
            
          
        
      </item>
      
      <item>
        <title>Dotfiles sync with bare repository</title>
        <link>https://eduuh.codes/posts/dotfilesmanagement/</link>
        <pubDate>Wed, 12 Feb 2020 11:37:37 +0300</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/posts/dotfilesmanagement/</guid>
        <description>A simpler way to manage your dotfiles Hey there am edd. I was having trouble with configuration files since I started using docker for my development. I realized I was reconfiguring each time I recreated a new environment. For consistecy and time saving , I decided it would be great if could sync my dotfiles using git and github and when creating new enviroments.
I wrote the solution in this post, for easy reference if i need to in the future.</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codesimages/dotfiles.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Cli</category>
            
          
            
              <category>Git</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
            
              <category>Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>Installing Node.js Tutorial using nvm</title>
        <link>https://eduuh.codes/posts/installingnode/</link>
        <pubDate>Sat, 04 Jul 2020 10:45:17 +0000</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/posts/installingnode/</guid>
        <description>As with any Programming language, platform, or tool, the first step to using it is getting it installed. Many of them typically comes with a speedy way to upgrade when a new version is available.
By default, there&amp;rsquo;s not a way to upgrade the version of Node.js you&amp;rsquo;ve got from within Node.js itself. That said, there&amp;rsquo;s a fantastic tool for the community called nvm that allows you to manage the version of Node.</description>
        
        <dc:creator>eduuh</dc:creator>
        
        
        
        
          
            
              <category>Javascript</category>
            
          
            
              <category>Nvm</category>
            
          
            
              <category>Cli</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
            
              <category>Linux</category>
            
          
            
              <category>Node.js</category>
            
          
        
        
          
            
              <category>Development</category>
            
          
        
      </item>
      
      <item>
        <title>Tmux Workshop</title>
        <link>https://eduuh.codes/workshops/tmux/tmux/</link>
        <pubDate>Fri, 26 Jun 2020 20:51:14 +0000</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/workshops/tmux/tmux/</guid>
        <description>Intro. It&amp;rsquo;s tmux a so-called terminal multiplexer. Simply speaking , tmux acts as a window manager within your terminal and allows you to create multiple windows and panes within a single terminal window.
Your mouse is slowing you down.
As we build softwares, we work with multiple programs throughout the course of our day. A web developer, for example, mght have a database console , a web server and a text editor running at the same time.</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codes/images/tmux/tmuxlogo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Tmux</category>
            
          
            
              <category>Cli</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
        
        
          
            
              <category>Dwmworkflow</category>
            
          
        
      </item>
      
      <item>
        <title>Bash Scripting</title>
        <link>https://eduuh.codes/workshops/scripting/bashsripting/</link>
        <pubDate>Tue, 26 May 2020 16:02:40 +0300</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 17:39:56 +0000</atom:modified>
        <guid>https://eduuh.codes/workshops/scripting/bashsripting/</guid>
        <description>Basic Scripting Now that we&amp;rsquo;ve covered the basics of linux system and the command line.IF not check it out.
It&amp;rsquo;s time to start coding.
Using Multiple commands. The key to shell scripts is the ability to enter multiple commands and process the results from each command even possibly passing the result of one command to another.
If you want to run two commands together,you can enter them on the same prompt line, separated with a semicolon.</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codesimages/gnu-bash.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Cli</category>
            
          
            
              <category>bash</category>
            
          
        
        
          
            
              <category>productivity</category>
            
          
            
              <category>linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>Advanced Git WorkShop</title>
        <link>https://eduuh.codes/workshops/git/advancedgit/</link>
        <pubDate>Wed, 19 Feb 2020 12:00:06 +0900</pubDate>
        <author>edwinkamaumuraya0@outlook.com (Edûûh Muraya)</author>
        <atom:modified>Sun, 26 Jul 2020 18:17:09 +0000</atom:modified>
        <guid>https://eduuh.codes/workshops/git/advancedgit/</guid>
        <description>Advanced Git WorkShop Hello am Edd and I will be taking you through this workshop.By the end of this workshop, if you follow along you have a completely different understanding of Git and how you work with it.
How we will go along I will start will a short demo on the command line to introduce the new material.
After a bit we will have some exercise for you to practise what we were going through.</description>
        
        <dc:creator>eduuh</dc:creator>
        <media:content url="https://eduuh.codesimages/git/giticon.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Git</category>
            
          
        
        
          
            
              <category>Productivity</category>
            
          
        
        
          
            
              <category>Deevelopment</category>
            
          
        
      </item>
      

    
  </channel>
</rss>